/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U   |  I   |  O   | P |
            // |  A  |  S  |  D  |  F  |  G  |     |  H  |  J   |  K   |  L   | ' | 
            // |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   | CTRL | META | . |
            //             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |

            display-name = "Base";
            bindings = <
  &kp Q  &kp W  &kp E      &kp R        &kp T        &kp Y            &kp U  &kp I          &kp O           &kp P
  &kp A  &kp S  &kp D      &kp F        &kp G        &kp H            &kp J  &kp K          &kp L           &mt COMMA PERIOD
  &kp Z  &kp X  &kp C      &kp V        &kp B        &kp N            &kp M  &mt LCTRL SQT  &mt LALT COLON  &mt EXCLAMATION QUESTION
                &mkp LCLK  &lt 1 ENTER  &kp SPACE    &mt LSHFT SPACE  &mo 2  &kp BSPC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | !     |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
            // | BT1   | BT2 | BT3 | BT4 | BT5 |     | LFT | DWN |  UP | RGT |     |
            // | BTCLR |     |     |     |     |     |     |     |     |     |     |
            //               | GUI |     | SPC |     | ENT | ESC | TAB |

            display-name = "Lower";
            bindings = <
  &kp CARET        &kp AT                      &kp HASH                        &mt AMPERSAND DOLLAR        &mt SEMICOLON COLON                       &mt PLUS MINUS        &kp N1   &kp N2   &kp N3  &kp LCTRL
  &mkp MCLK        &kp LEFT                    &kp UP                          &kp DOWN                    &kp RIGHT                                 &mt UNDERSCORE EQUAL  &kp N4   &kp N5   &kp N6  &kp LEFT_ALT
  &mt GRAVE TILDE  &mt GREATER_THAN LESS_THAN  &mt RIGHT_BRACKET LEFT_BRACKET  &mt RIGHT_BRACE LEFT_BRACE  &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS    &mt PERCENT ASTERISK  &kp N7   &kp N8   &kp N3  &kp N0
                                               &mkp RCLK                       &trans                      &mt ENTER SPACE                           &mt LSHFT SPACE       &kp ESC  &kp DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | 1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8  |  9   |  0   |
            // | -  |  =  |  {  |  [  |  (  |     |  )  |  ]  |  }  |  /   |  \   |
            // | `  |     |     |  ,  |  :  |     |  ;  |  .  | CTRL| META |      |
            //            | GUI | ESC | SPC |     | ENT |     | TAB |

            display-name = "Raise";
            bindings = <
  &kp N1      &kp N2        &kp N3        &kp N4     &kp N5       &kp N6            &kp N7        &kp N8        &kp N9     &kp PIPE
  &kp MINUS   &kp EQUAL     &kp LBRC      &kp LBKT   &kp LPAR     &kp LEFT_ARROW    &kp DOWN      &kp UP        &kp RIGHT  &mt SLASH BACKSLASH
  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &kp COMMA  &kp D        &kp C_PLAY_PAUSE  &kp C_VOL_DN  &kp C_VOL_UP  &kp RALT   &kp TAB
                            &kp LGUI      &kp ESC    &kp SPACE    &kp RET           &trans        &kp TAB
            >;
        };
    };
};